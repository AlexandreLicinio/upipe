
@section TPH {Installation}

@section T {Requirements}

Upipe has the following dependencies:

@list
@item a C99 compiler (Upipe won't probably compile with any other compiler
      than gcc >= 4.1)
@item support for Intel atomic built-ins (there is a fallback with semaphores
      for architectures/compilers that don't support them, but it is really
      not recommended)
@item a recent version of
      autoconf (@url http://www.gnu.org/software/autoconf/),
      automake (@url http://www.gnu.org/software/automake/)
      and libtool (@url http://www.gnu.org/software/libtool/)
@end list

Upipe has the following optional dependencies:

@list
@item @url http://www.freedesktop.org/wiki/Software/pkg-config/
      pkg-config to detect installed dependencies
@item @url http://dist.schmorp.de/libev/ libev library and headers
      (only required for the optional libupump-ev library), tested with 4.11.
@item @url http://www.nongnu.org/mkdoc/ mkdoc to compile the documentation
@item @url http://ffmpeg.org/ or @url http://libav.org/ libraries and headers
      for upipe-av and upipe-sws.
      Tested with libav v9.10, and ffmpeg 1.1 up to 2.1.1 .
      FFmpeg/libav needs to be configured with --enable-pic --enable-shared.
@item perl is needed in the build process of upipe-av 
@item @url http://www.videolan.org/developers/bitstream.html headers to build
      upipe-ts, upipe-framers, and a few upipe-modules components.
      bitstream should always be fetched from the latest git.
@item @url http://www.videolan.org/developers/x264.html for upipe-x264
@item a GL/GLU/GLX and X11 implementation for upipe-gl
@end list

@end section

@section T {Build}

Upipe comes with a pretty standard autotools build system, so
@code R
./bootstrap && ./configure && make
@end code
should be enough to build it. Unit tests can be built and run with:
@code R
make check
@end code

@end section

@section T {Execution}

Upipe is a set of developement headers for pipes and librares for
applications, and thus runs inside an application. Simple examples
are however provided in the tests/ directory.

@end section

@end section

